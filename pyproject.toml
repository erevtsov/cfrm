[project]
name = "cfrm"
version = "0.1.0"
description = "CFRM program homework"
readme = "README.md"
requires-python = "==3.12.*"
dependencies = [
    "alpha-vantage>=3.0.0",
    "boto3>=1.36.11",
    "cvxopt>=1.3.2",
    "cvxpy>=1.6.3",
    "ibis-framework[duckdb]>=10.0.0",
    "imblearn>=0.0",
    "ipykernel>=6.29.5",
    "keras-tuner>=1.4.7",
    "matplotlib>=3.10.1",
    "notebook>=7.3.2",
    "openpyxl>=3.1.5",
    "pandas>=2.2.3",
    "pandas-datareader>=0.10.0",
    "polars>=1.21.0",
    "pyarrow>=19.0.0",
    "python-dotenv>=1.0.1",
    "ruff>=0.9.9",
    "scikit-learn>=1.6.1",
    "scipy>=1.15.2",
    "tensorflow>=2.19.0",
    "xgboost>=3.0.2",
    "yfinance>=0.2.52",
]
[dependency-groups]
dev = [
    "ipython>=8.32.0",
    "pytest>=8.3.4",
    "ruff>=0.9.4",
]

[[tool.uv.index]]
name = "pybuild"
url = "https://pypi.org/simple"

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple"
default = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
per-file-ignores ={"Element.py" = ['F401']}

# https://docs.astral.sh/ruff/rules/
select = [
    "E", # pycodestyle errors
    "F", # pyflakes
    "W", # pydocstyle warning
    "N", # pep8-naming
    "UP", # pyupgrade
]

ignore = [
    #
    "D100", # missing docstring in public module
    "N999", # invalid module name
    # Lint rules that conflict with format rules
    # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
    "COM812",  # missing-trailing-comma
    "COM819",  # prohibited-trailing-comma
    "D206",  # indent-with-spaces
    "D300",  # triple-single-quotes
    "E111",  # indentation-with-invalid-multiple
    "E114",  # indentation-with-invalid-multiple-comment
    "E117",  # over-indented
    "E501",  # line-too-long
    "ISC001",  # single-line-implicit-string-concatenation
    "ISC002",  # multi-line-implicit-string-concatenation
    "Q000",  # bad-quotes-inline-string
    "Q001",  # bad-quotes-multiline-string
    "Q002",  # bad-quotes-docstring
    "Q003",  # avoidable-escaped-quote
    "W191",  # tab-indentation
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Use single quotes for non-triple-quoted strings.
quote-style = "single"
